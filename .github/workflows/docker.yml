name: Build and Push Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive

      - name: Show repo layout
        run: |
          set -eux
          pwd
          ls -la
          echo "---- tree -L 2 (if available) ----"
          command -v tree && tree -L 2 || true

      - name: Verify frontend exists
        run: |
          set -eux
          test -d frontend || (echo "Missing ./frontend directory at repo root" && exit 2)
          test -f frontend/package.json || (echo "Missing ./frontend/package.json" && exit 3)
          head -n 50 frontend/package.json || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify Docker Hub credentials
        run: |
          if [ -z "${DOCKERHUB_USERNAME}" ] || [ -z "${DOCKERHUB_TOKEN}" ]; then
            echo "Docker Hub credentials are not set. Please add DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets."
            exit 1
          fi
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Docker Hub
        id: docker_login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (CPU) with plain logs
        if: ${{ steps.docker_login.outcome == 'success' }}
        run: |
          set -euxo pipefail
          docker build \
            --progress=plain \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/audio-scene-architect:latest \
            .

      - name: Push (CPU)
        if: ${{ steps.docker_login.outcome == 'success' }}
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/audio-scene-architect:latest

      - name: Smoke run + health (CPU)
        if: ${{ steps.docker_login.outcome == 'success' }}
        run: |
          set -euxo pipefail
          docker run -d --rm --name test-container -p 8000:8000 \
            ${{ secrets.DOCKERHUB_USERNAME }}/audio-scene-architect:latest
          # wait up to 40s
          for i in $(seq 1 40); do
            if curl -fsS http://127.0.0.1:8000/api/health >/dev/null; then
              echo "Health OK on attempt $i"; break
            fi
            echo "Health not ready (attempt $i)"; sleep 1
          done
          if ! curl -fsS http://127.0.0.1:8000/api/health >/dev/null; then
            echo ">>> Container logs (last 400 lines):"
            docker logs --timestamps test-container | tail -n 400 || true
            exit 1
          fi
          # Show routes
          curl -fsS http://127.0.0.1:8000/api/_debug/routes | jq || true
          docker rm -f test-container || true
