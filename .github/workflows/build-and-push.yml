name: Build and Push GPU/CPU Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/audio-scene-architect
  TORCH_VERSION: ${{ vars.TORCH_VERSION || '2.3.1' }}
  TORCHAUDIO_VERSION: ${{ vars.TORCHAUDIO_VERSION || '2.3.1' }}
  AUDIOCRAFT_REF: ${{ vars.AUDIOCRAFT_REF || 'main' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          TS=$(date -u +%Y%m%d-%H%M%S)
          SHA7=${GITHUB_SHA::7}
          echo "STAMP=${TS}-${SHA7}" >> $GITHUB_OUTPUT

      - name: Set vars
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "stamp=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build & push GPU app (no base indirection)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.gpu
          push: true
          tags: |
            docker.io/jakeypoov/audio-scene-architect:gpu
            docker.io/jakeypoov/audio-scene-architect:gpu-${{ github.run_id }}
          build-args: |
            AUDIOCRAFT_REF=v1.3.0
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push CPU image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.cpu
          push: true
          tags: |
            docker.io/${{ env.IMAGE_REPO }}:cpu
          build-args: |
            BUILD_TAG=${{ steps.tags.outputs.STAMP }}
          cache-from: |
            type=gha
          cache-to: |
            type=gha,mode=max

      - name: Print stamped tag
        run: |
          echo "STAMPED_GPU_TAG=docker.io/jakeypoov/audio-scene-architect:gpu-${{ github.run_id }}"

      - name: Smoke test container (CPU)
        run: |
          docker run -d --name asa-cpu -p 8000:8000 docker.io/${{ env.IMAGE_REPO }}:cpu

          echo "=== Poll /api/health until 200 (liveness) ==="
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/api/health || true)
            [ "$code" = "200" ] && echo "health OK" && break
            sleep 2
          done

          echo "=== Poll /api/ready until 200 (readiness) or timeout ==="
          for i in {1..90}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/api/ready || true)
            if [ "$code" = "200" ]; then
              echo "ready OK"; break
            fi
            sleep 2
          done

          # final assert (fail with logs if not ready)
          curl -f http://localhost:8000/api/ready || (docker logs asa-cpu; exit 1)

          # existing acceptance checks
          bash scripts/acceptance.sh || (docker logs asa-cpu; exit 1)
          docker rm -f asa-cpu
