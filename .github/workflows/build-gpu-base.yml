name: build-gpu-base
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile.gpu-base'
      - 'backend/requirements.in'
      - 'backend/constraints.txt'
      - '.github/workflows/build-gpu-base.yml'

env:
  REGISTRY: docker.io
  ORG: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_BASENAME: audio-scene-architect-gpu-base

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Set vars
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "stamp=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "CUDA_BASE=nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push GPU base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.gpu-base
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_BASENAME }}:latest
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_BASENAME }}:${{ steps.vars.outputs.stamp }}-${{ steps.vars.outputs.short_sha }}
          build-args: |
            CUDA_BASE=${{ steps.vars.outputs.CUDA_BASE }}
            TORCH_VERSION=${{ vars.TORCH_VERSION }}
            TORCHAUDIO_VERSION=${{ vars.TORCHAUDIO_VERSION }}
            AUDIOCRAFT_REF=${{ vars.AUDIOCRAFT_REF }}
          cache-from: |
            type=gha
          cache-to: |
            type=gha,mode=max
