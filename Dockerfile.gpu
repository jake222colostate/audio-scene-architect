# syntax=docker/dockerfile:1.6
FROM nvidia/cuda:12.1.1-runtime-ubuntu22.04
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    HF_HOME=/app/.cache/huggingface TRANSFORMERS_CACHE=/app/.cache/huggingface
WORKDIR /app

RUN echo ">>> [gpu] apt-get install deps" && \
    apt-get update && apt-get install -y --no-install-recommends \
      python3 python3-pip python3-venv build-essential libsndfile1 ffmpeg curl git ca-certificates && \
    ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip && \
    rm -rf /var/lib/apt/lists/*

COPY backend /app/backend
RUN echo ">>> [gpu] pip install base reqs" && \
    pip install --no-cache-dir -r /app/backend/requirements.txt
RUN echo ">>> [gpu] pip install heavy reqs" && \
    pip install --no-cache-dir -r /app/backend/requirements-heavy.txt

# Build-time GPU sanity checks (Torch/CUDA/Audiocraft)
RUN echo ">>> [gpu] Python/Torch/CUDA sanity checks" && python - <<'PY'
import sys, importlib
print("python:", sys.version)
mods = ["torch","torchaudio","fastapi","uvicorn","numpy","soundfile"]
for m in mods:
    try:
        importlib.import_module(m)
        print("ok import:", m)
    except Exception as e:
        print("FAIL import:", m, "->", e); raise
import torch
print("torch.__version__:", torch.__version__)
print("torch.cuda.is_available():", torch.cuda.is_available())
print("torch.version.cuda:", getattr(torch.version, "cuda", None))
if torch.cuda.is_available():
    print("device:", torch.cuda.get_device_name(0))
# Audiocraft import
try:
    import audiocraft
    from audiocraft.models import AudioGen
    print("ok import: audiocraft; AudioGen class present:", hasattr(AudioGen, "get_pretrained"))
except Exception as e:
    print("FAIL import: audiocraft ->", e); raise
PY

# optional: create cache dir
RUN mkdir -p /app/.cache/huggingface

EXPOSE 8000
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=5 \
  CMD curl -fsS http://127.0.0.1:8000/api/health >/dev/null || exit 1

COPY docker/entrypoint.sh /app/docker/entrypoint.sh
RUN chmod +x /app/docker/entrypoint.sh

CMD ["python","-m","uvicorn","backend.main:app","--host","0.0.0.0","--port","8000","--log-level","info"]
