# syntax=docker/dockerfile:1.7

# Must be BEFORE any FROMs so it can be used in FROM
ARG BASE_IMAGE=docker.io/jakeypoov/audio-scene-architect:gpu-stable

# Build frontend (cached)
FROM node:20-slim AS frontend
WORKDIR /app
COPY package.json package-lock.json* ./
RUN --mount=type=cache,target=/root/.npm \
    if [ -f package-lock.json ]; then npm ci; else npm i; fi
COPY . .
RUN npm run build

# App runtime on prebuilt GPU base
FROM ${BASE_IMAGE} AS runtime
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 \
    USE_HEAVY=1 ALLOW_FALLBACK=1 OUTPUT_DIR=/app/backend/output_audio
WORKDIR /app

COPY backend /app/backend
COPY --from=frontend /app/dist /app/frontend/dist

EXPOSE 8000
HEALTHCHECK --start-period=60s --interval=5s --timeout=3s --retries=60 \
  CMD curl -fsS http://localhost:8000/api/health || exit 1
CMD ["python3","-m","backend.start"]
