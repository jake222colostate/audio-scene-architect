# syntax=docker/dockerfile:1.6
ARG BASE_IMAGE=jakeypoov/audio-scene-architect:gpu-base
FROM ${BASE_IMAGE}
SHELL ["/bin/bash","-euxo","pipefail","-c"]

ARG BUILD_TAG=dev
ENV BUILD_TAG=${BUILD_TAG}
WORKDIR /app

# Frontend build in separate stage (cached with Buildx)
FROM node:20-slim AS frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN [ -f package.json ] && npm ci || true
COPY frontend/ ./
RUN [ -f package.json ] && npm run build || mkdir -p /app/frontend/dist

# Back to CUDA base with deps already installed
FROM ${BASE_IMAGE}
WORKDIR /app

# Copy backend source last so small changes donâ€™t bust earlier layers
COPY backend /app/backend

# Copy built frontend (if any)
COPY --from=frontend /app/frontend/dist /app/frontend/dist

EXPOSE 8000
HEALTHCHECK --interval=30s --timeout=5s --retries=5 \
  CMD curl -fsS http://127.0.0.1:8000/api/health >/dev/null || exit 1

CMD ["python","-m","uvicorn","backend.main:app","--host","0.0.0.0","--port","8000","--log-level","info"]
